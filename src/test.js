const names = {
    human: {
        familyNames: [
            { name: 'Walker', count: 11 },
            { name: 'Gardener', count: 22 },
            { name: 'Taylor', count: 33 },
            { name: 'Tillerman', count: 50 },
            { name: 'Kennedy', count: 55 },
            { name: 'Roberts', count: 66 },
            { name: 'Wright', count: 77 },
            { name: 'Green', count: 88 },
            { name: 'Morris', count: 99 },
            { name: 'Jackson', count: 99 },
            { name: 'Hill', count: 100 },
            { name: 'Baker', count: 100 },
            { name: 'Young', count: 100 },
            { name: 'Richardson', count: 100 },
            { name: 'Wilkinson', count: 100 },
            { name: 'Hunt', count: 100 },
            { name: 'Thompson', count: 100 },
            { name: 'Moore', count: 100 },
            { name: 'Anderson', count: 100 },
            { name: 'Davis', count: 100 },
            { name: 'Miller', count: 150 },
            { name: 'Jones', count: 150 },
            { name: 'Brown', count: 150 },
            { name: 'Williams', count: 150 },
            { name: 'Johnson', count: 150 },
            { name: 'Smith', count: 150 },
        ],
        firstNames: [
            'James',
            'Robert',
            'Johnny',
            'Michael',
            'David',
            'William',
            'Richard',
            'Joseph',
            'Daniel',
            'Charles',
            'Matthew',
            'Anthony',
            'Mark',
            'Donald',
            'Steven',
            'Paul',
            'Andrew',
            'Joshua',
            'Kenneth',
            'Kevin',
            'Brian',
            'George',
            'Timothy',
            'Ronald',
            'Jason',
            'Jeffrey',
            'Ryan',
            'Jacob',
            'Gary',
            'Eric',
            'Larry',
            'Justin',
            'Scott',
            'Brandon',
            'Benjamin',
            'Samuel',
            'Gregory',
            'Frank',
            'Patrick',
            'Raymond',
            'Jack',
            'Dennis',
            'Jerry',
            'Tyler',
            'Aaron',
            'Adam',
            'Nathan',
            'Henry',
            'Douglas',
            'Zachary',
            'Peter',
            'Kyle',
            'Jeremy',
            'Christian',
            'Keith',
            'Roger',
            'Terry',
            'Sean',
            'Austin',
            'Carl',
            'Dylan',
            'Jesse',
            'Jordan',
            'Billy',
            'Alan',
            'Wayne',
            'Randy',
            'Bobby',
            'Mason',
            'Philip',
            'Owen',
            'Aiden',
            'Leo',
            'Carter',
            'Lincoln',
            'Maverick',
            'Caleb',
            'Xavier',
            'Cameron',
            'Ryan',
            'Colton',
            'Ian',
            'Beau',
            'Parker',
            'Declan',
            'Kayden',
            'River',
            'Chase',
            'Walker',
            'Braxton',
            'Ace',
            'Graham',
            'Tucker',
            'Samson',
            'Brody',
            'Larson',
            'Dawson',
            'Nash',
            'imon',
            'Micky',
            'Rocco',
            'Lincoln',
            'Shawn',
            'Jimmy',
            'Stanley',
            'Dale',
            'Curtis',
            'Norman',
            'Marvin',
            'Chad',
            'Wyatt',
            'Liam',
            'Levi',
            'Jackson',
            'Jai',
            'Julian',
            'Elijah',
            'Ethan',
            'Cooper',
            'Kai',
            'Jay',
            'Vaughn',
            'Calvin',
            'Arthur',
            'Max',
            'Angus',
            'Apollo',
            'Charlie',
            'Kyson',
            'Lewis',
            'Luke',
            'Lionel',
            'Murray',
            'Memphis',
            'Maddox',
            'Cruze',
            'Perry',
            'Percy',
            'Drew',
            'Cory',
            'Fisher',
            'Quade',
            'Dimitry',
            'Roman',
            'Rory',
            'Ridge',
            'Seamus',
            'Finley',
            'Tex',
            'Jett',
        ]
    },
    nocturne: {
        familyNames: [
            { name: 'Bloodwood', count: 11 },
            { name: 'Nightshade', count: 22 },
            { name: 'St.Clair', count: 33 },
            { name: 'Belladonna', count: 44 },
            { name: 'Ramsay', count: 55 },
            { name: 'Vaculai', count: 66 },
            { name: 'Orwell', count: 77 },
            { name: 'Salem', count: 88 },
            { name: 'Van-Horne', count: 99 },
            { name: 'Noir', count: 100 },
            { name: 'Bathory', count: 100 },
            { name: 'Elm', count: 100 },
            { name: 'Constantine', count: 100 },
            { name: 'Deloraine', count: 105 },
            { name: 'Poe', count: 111 },
        ],
        firstNames: [
            'Dante',
            'Victor',
            'Edward',
            'Alaric',
            'Blaise',
            'Ephraim',
            'Jasper',
            'Klaus',
            'Orpheus',
            'Thorne',
            'Willow',
            'Dominic',
            'Oliver',
            'Armand',
            'Archer',
            'Solomon',
            'Tobias',
            'Edgar',
            'Vincent',
            'Kingston',
            'Gustav',
            'Alistair',
            'Hannibal',
            'Dorian',
            'Gray',
            'Drystan',
            'Erik',
            'Rufus',
            'Silas',
            'Leif',
            'Oscar',
            'Vlad',
            'Cain',
            'Lucian',
            'Raven',
            'Finn',
            'Valentino',
            'Casper',
            'Everett',
            'Benedict',
            'Hudson',
            'Harold',
            'Augustus',
            'Christopher',
            'Sisyphus',
            'Eli',
            'Thomas',
            'Castielle',
            'Maxwell',
            'Damian',
            'Amon',
            'Leviathan',
            'Samael',
            'Seth',
            'Ambrosia',
            'Bartholomew',
            'Lazarus',
            'Magnus',
            'Orpheus',
            'Osbourne',
            'Xander',
            'Salvatore',
            'Mortimer',
            'Gabriel',
            'Petrie',
            'Morpheus',
            'Marlowe',
            'Atticus', 
            'Serpentine',
            'Maine',
            'Cadaver',
            'Ipswich',
            'Rasputin',
            'Lyle',
            'Westminster',
            'Niles',
            'Shawshank',
            'Beethoven',
            'Lester',
            'Verdant',
            'Reid',
            'Theodore',
            'Ivan',
            'Octavius',
            'Linus',
            'Milton',
            'Abraham',
            'Ezekiel',
            'Jeremiah',
            'Nathaniel',
            'Zachariah',
            'Ignacio',
            'Pascal',
            'Elmer',
            'Frederik',
            'Byron',
            'Donovan',
            'Fergus',
            'Huxley',
            'Newton',
            'Deville',
            'Preston',
            'Royce',
            'Vernon',
            'Winston',
            'Marlborough',
            'Juniper',
            'Art',
            'Killbert',
            'Moreton',
            'Earle',
        ]
    },
    hive: {
        familyNames: [
            { name: 'X', count: 11 },
            { name: 'AAA', count: 22 },
            { name: 'cDZ8', count: 33 },
            { name: 'F300', count: 44 },
            { name: 'bY4V199', count: 55 },
            { name: 'P11R', count: 66 },
            { name: 'L1', count: 77 },
            { name: 'P0Lyd', count: 88 },
            { name: 'znK', count: 99 },
            { name: 'lYNx', count: 238 },
            { name: 'r1c3r', count: 239 },
        ],
        firstNames: [
            "001",
            "002",
            "003",
            "004",
            "005",
            "006",
            "007",
            "008",
            "009",
            "010",
            "011",
            "012",
            "013",
            "014",
            "015",
            "016",
            "017",
            "018",
            "019",
            "020",
            "021",
            "022",
            "023",
            "024",
            "025",
            "026",
            "027",
            "028",
            "029",
            "030",
            "031",
            "032",
            "033",
            "034",
            "035",
            "036",
            "037",
            "038",
            "039",
            "040",
            "041",
            "042",
            "043",
            "044",
            "045",
            "046",
            "047",
            "048",
            "049",
            "050",
            "051",
            "052",
            "053",
            "054",
            "055",
            "056",
            "057",
            "058",
            "059",
            "060",
            "061",
            "062",
            "063",
            "064",
            "065",
            "066",
            "067",
            "068",
            "069",
            "070",
            "071",
            "072",
            "073",
            "074",
            "075",
            "076",
            "077",
            "078",
            "079",
            "080",
            "081",
            "082",
            "083",
            "084",
            "085",
            "086",
            "087",
            "088",
            "089",
            "090",
            "091",
            "092",
            "093",
            "094",
            "095",
            "096",
            "097",
            "098",
            "099",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159",
            "160",
            "161",
            "162",
            "163",
            "164",
            "165",
            "166",
            "167",
            "168",
            "169",
            "170",
            "171",
            "172",
            "173",
            "174",
            "175",
            "176",
            "177",
            "178",
            "179",
            "180",
            "181",
            "182",
            "183",
            "184",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239"
        ]
    },
    acacia: {
        familyNames: [
            { name: 'Moks’ha', count: 9 },
            { name: 'Silsi', count: 20 },
            { name: 'Bra’la', count: 30 },
            { name: 'Calla', count: 40 },
            { name: 'Ne’a', count: 50 },
            { name: 'Teley', count: 50 },
            { name: 'De’ya', count: 55 },
            { name: 'Mannu', count: 60 },
            { name: 'Ashu’la', count: 65 },
            { name: 'Shivah', count: 70 },
            { name: 'Tun’da', count: 75 },
            { name: 'Sun’sal', count: 80 },
            { name: 'Mo’at', count: 90 },
        ],
        firstNames: [
            'Su’min',
            'Vilen',
            'Nimue',
            'Eris',
            'Oli’u',
            'Hopi',
            'Kuna',
            'Ba’lek',
            'Na’koa',
            'Atsu',
            'Lasi',
            'O’alu',
            'Mo’jave',
            'Aleki',
            'Alofi',
            'Ios',
            'Ma’losi',
            'No’a',
            'Sia’osi',
            'Tailo',
            'Tua’la',
            'Vaea',
            'Pe’le',
            'Anaru',
            'Mu',
            'Lay',
            'Arel',
            'Mei',
            'Maia',
            'Noru',
            'Holokai',
            'Yey',
            'Karyu',
            'Tskaha',
            'Tsyal',
            'Ralu',
            'Talwar',
            'Jowa',
            'Gu',
            'Shem',
            'Ral’o',
            'Selsi’us',
            'Sar',
            'Pel',
            'Oppi',
            'La’tu',
            'Juja',
            'Yel',
            'Mirai',
            'Ha’nita',
            'Elo',
            'Ta’mu',
            'Ca’va',
            'Wep',
            'A’wen',
            'Yula',
            'Nir’vana',
            'Sera',
            'I’is',
            'Monowatu',
            'Aleo',
            'Pe’lu',
            'Feyel',
            'Ce’lo',
            'U’lele',
            'Malu',
            'Yuyiyu',
            'Hu’ma',
            'La’shu',
            'Lo',
            'Nu',
            'Su',
            'Na’e',
            'Elolu',
            'U’ne',
            'O’ley',
            'Oss',
            'Lennu',
            'Aralilu',
            'Nuna’e',
            'We’luye',
            'La’e',
            'We’a',
            'Ulom’e',
            'Pu’ya',
            'Olole',
            'Alasa’ye',
            'Inila',
            'A’gu',
            'E’yu',
        ]
    },
    chosen: {
        familyNames: [
            { name: 'Xil', count: 3 },
            { name: 'Sadik', count: 10 },
            { name: 'Kepri', count: 15 },
            { name: 'Amsi', count: 20 },
            { name: 'Amen', count: 25 },
            { name: 'Naveed', count: 25 },
            { name: 'Babafemi', count: 30 },
            { name: 'Hapi', count: 30 },
            { name: 'Harakhty', count: 30 },
            { name: 'Hu', count: 30 },
            { name: 'Kek', count: 30 },
            { name: 'Mesi', count: 30 },
        ],
        firstNames: [
            'Ra',
            'Ur',
            'Asim',
            'Chisisi',
            'Gyasi',
            'Khons',
            'Sadiiki',
            'Aharon',
            'Akhenaten',
            'Apep',
            'Baahir',
            'Horus',
            'Imhotep',
            'Abraxas',
            'Zahur',
            'Moke',
            'Ter',
            'Zu',
            'Ren',
            'Atah',
            'Nyhz',
            'Let',
            'Zarx',
            'Crexa',
            'Abubakar',
            'Omar',
            'Farid',
            'Yasir',
            'Ismail',
            'Anwar',
        ]
    },
}

function generateNames() {
    const reduced = Object.entries(names).reduce((acc, [faction, familyObj]) => {
        
        familyObj.familyNames.forEach(family => {
            // Just in case we don't have enough names to cover.
            if (family.count > familyObj.firstNames.length) {
                throw new Error('There is not enough first names to cover expected count of the family names.')
            }

            const firstNames = familyObj.firstNames.slice(0, family.count).sort(() => Math.random() - 0.5)

            firstNames.forEach(firstName => {
                if (faction === 'hive') {
                    // Reverse it
                    acc[faction].push(`${family.name}-${firstName}`)
                } else {
                    acc[faction].push(`${firstName} ${family.name}`)
                }
            })

        })

        return acc
    }, Object.keys(names).reduce((acc, k) => {
        acc[k] = []
        return acc
    }, {}))

    return Object.entries(reduced).reduce((acc, [faction, names]) => {
        acc[faction] = names.sort(() => Math.random() - 0.5)
        return acc;
    }, {})
}

const generatedNames = generateNames()

const counts = Object.entries(names).reduce((acc, [faction, familyObj]) => {
    familyObj.familyNames.forEach(family => {
        acc[faction].expectedCount = acc[faction].expectedCount + family.count
    })
    
    return acc
}, Object.keys(names).reduce((acc, k) => {
    acc[k] = { expectedCount: 0 }
    return acc
}, {}))

Object.entries(counts).forEach(([faction, obj]) => {
    if (generatedNames[faction].length !== obj.expectedCount) {
        throw new Error('The expected counts of the names dont match up')
    }
})

const total = Object.entries(names).reduce((acc, [faction, familyObj]) => {
    familyObj.familyNames.forEach(family => {
        acc = acc + family.count
    })
    return acc
}, 0)

// console.log({
//     counts,
//     total,
//     // generatedNames
// })

console.log(generatedNames.human.length)

const factionLookup = {
    human: 'Human',
    nocturne: 'Nocturne',
    hive: 'hive.NET',
    acacia: 'Acacia',
    chosen: 'The Chosen'
}

module.exports = {
    generatedNames,

}